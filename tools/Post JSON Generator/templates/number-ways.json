{
  "slug": "number-ways",
  "title": "Count the number of ways to traverse a 2D array",
  "hint": "If i > 0 and j > 0, you can get to (i, j) from (i - 1, j) or (j - 1, i).",
  "problem": "In this problem you are to count the number of ways of starting at the top-left corner of a 2D array and getting to the bottom-right corner. All moves must either go right or down. For example, we show three ways in a 5 x 5 2D array. See the figure for a better understanding. (Note, there are a total of 70 possible ways for this example.) <p> <img src=\"http:\/\/raw.githubusercontent.com\/bradstewart\/epi-online\/master\/static\/posts\/number-ways-1.png\"\/> <p> <img src=\"http:\/\/raw.githubusercontent.com\/bradstewart\/epi-online\/master\/static\/posts\/number-ways-2.png\"\/> <p> <img src=\"http:\/\/raw.githubusercontent.com\/bradstewart\/epi-online\/master\/static\/posts\/number-ways-3.png\"\/> <p> <i>Paths through a 2D array. </i> <p> Write a program that takes i and j values and returns the number of ways to the bottom-right corner."
}
