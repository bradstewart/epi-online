{"title": "Compute the integer square root", "hint": "Look out for a corner-case.", "slug": "square-root-int", "problem": "Write a program which takes a non-negative integer and returns the largest integer whose square is less than or equal to the given integer.", "code": {"cpp": {"harness": "// Copyright (c) 2016 Elements of Programming Interviews. All rights reserved.\n#include \"test_toolkit/test-options.h\"\n// Copyright (c) 2013 Elements of Programming Interviews. All rights reserved.\n\n#include <cassert>\n#include <cmath>\n#include <iostream>\n#include <limits>\n#include <numeric>\n#include <random>\n#include <string>\n\n#include \"test_toolkit/main_def.h\"\n\nusing std::cout;\nusing std::default_random_engine;\nusing std::endl;\nusing std::numeric_limits;\nusing std::random_device;\nusing std::stoi;\nusing std::uniform_int_distribution;\n\n//INSERT_ME\n\nvoid UnitTest(TestSentry::Ptr& sentry, const char* description,\n              int input, int expected) {\n  TestStream::Ptr stream = sentry->GetTestStream(TestType::NORMAL, description);\n  stream->RegisterInput(input);\n  stream->RegisterExpectedOutput(expected);\n  try {\n    int result = SquareRoot(input);\n    stream->RegisterUserOutput(result, result == expected);\n  }\n  catch (...) {\n    stream->RegisterUnhandledException();\n  }\n}\n\nvoid DirectedTests(const TestOptions& options) {\n  TestSentry::Ptr sentry = options.GetTestSentry(9, \"Integer Square Root\");\n\n  UnitTest(sentry, \"Zero value test\", 0, 0);\n  UnitTest(sentry, \"K = 1 test\", 1, 1);\n  UnitTest(sentry, \"K = 2 test\", 2, 1);\n  UnitTest(sentry, \"K = 3 test\", 3, 1);\n  UnitTest(sentry, \"K = 4 test\", 4, 2);\n  UnitTest(sentry, \"K = 8 test\", 8, 2);\n  UnitTest(sentry, \"K = 9 test\", 9, 3);\n  UnitTest(sentry, \"K = 64 test\", 64, 8);\n  UnitTest(sentry, \"K = 121 test\", 121, 11);\n  UnitTest(sentry, \"K = 300 test\", 300, 17);\n  /*UnitTest(sentry, \"Max int test\", numeric_limits<int32_t>::max(), 46340);*/\n}\n\nint main(int argc, char* argv[]) {\n  DirectedTests(TestOptions(&cout));\n  return 0;\n}\n", "skeleton": "int SquareRoot(int k) {\n    // Your solution here...\n}\n", "filename": "square-root-intTest.cc"}}}