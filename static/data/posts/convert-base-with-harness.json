{
  "slug": "convert-base",
  "title": "Base conversion",
  "hint": "What base can you easily convert to and from?",
  "problem": "Write a program that performs base conversion. The input is a string, an integer b1, and another integer b2. The string represents an integer in base b1. The output should be the string representing the integer in base b2. Assume 2 ≤ b1, b2 ≤ 16. <p> Example conversions: <pre>\"FF\" (16) = \"255\" (10)</pre><pre>\"-20\" (10) = \"-202\" (3)</pre>",
  "skeleton": "public static String convertBase(String s, int b1, int b2) {\r\n    \/\/ Your solution here...\r\n}",
  "test": "check(\"0\", 10, 10, \"0\");\r\n   check(\"10\", 10, 10, \"10\");\r\n   check(\"-20\", 10, 10, \"-20\");\r\n   check(\"2147483647\", 10, 10, \"2147483647\");\r\n   check(\"-2147483647\", 10, 10, \"-2147483647\");\r\n   check(\"10\", 2, 2, \"10\");\r\n   check(\"-20\", 3, 3, \"-20\");\r\n   check(\"1000100001111010\", 2, 16, \"887A\");\r\n   check(\"111000100001111010\", 2, 16, \"3887A\");\r\n   check(\"101100001111010\", 2, 8, \"54172\");\r\n   check(\"-1101100001111010\", 2, 8, \"-154172\");\r\n   check(\"255\", 10, 16, \"FF\");\r\n   check(\"-20\", 10, 3, \"-202\");\r\n   check(\"2147483647\", 10, 16, \"7FFFFFFF\");",
  "harness": "import java.util.Random;\r\n\r\npublic class ConvertBase {\r\n  \/\/ @include\r\n  FILL_ME_CODE\r\n  \/\/ @exclude\r\n\r\n  public static String randIntString(int len) {\r\n    Random r = new Random();\r\n    StringBuilder ret = new StringBuilder();\r\n    if (len == 0) {\r\n      return \"0\";\r\n    }\r\n    if (r.nextBoolean()) {\r\n      ret.append('-');\r\n    }\r\n    ret.append((char)('1' + r.nextInt(9)));\r\n    while (--len != 0) {\r\n      ret.append((char)('0' + r.nextInt(10)));\r\n    }\r\n    return ret.toString();\r\n  }\r\n\r\n  private static void unitTest(String input, int b1, int b2) {\r\n    String yourResult = convertBase(input, b1, b2);\r\n    if (!input.equals(convertBase(yourResult, b2, b1))) {\r\n      System.err.println(\"Failed on \" + input + \" start base = \" + b1\r\n                         + \" end base = \" + b2);\r\n      System.err.println(\"Your result was \" + yourResult + \" \" + b1 + \" \" + b2);\r\n      System.exit(-1);\r\n    }\r\n  }\r\n\r\n  private static void directedTests() {\r\n    unitTest(\"0\", 10, 2);\r\n    unitTest(\"1\", 10, 2);\r\n    unitTest(\"-1\", 10, 2);\r\n    unitTest(\"2147483647\", 10, 2);\r\n    unitTest(\"-2147483647\", 10, 2);\r\n    unitTest(\"10\", 10, 16);\r\n    unitTest(\"A\", 16, 16);\r\n    unitTest(\"B\", 16, 16);\r\n    unitTest(\"F\", 16, 16);\r\n    unitTest(\"A\", 16, 10);\r\n    unitTest(\"B\", 16, 10);\r\n    unitTest(\"F\", 16, 10);\r\n    unitTest(\"F\", 16, 2);\r\n    unitTest(\"10\", 2, 4);\r\n    unitTest(\"-1\", 2, 4);\r\n    unitTest(\"-100\", 2, 4);\r\n    unitTest(\"-100\", 2, 4);\r\n    unitTest(\"-120\", 3, 4);\r\n    unitTest(\"3\", 4, 5);\r\n    unitTest(\"FF\", 16, 10);\r\n    \/\/ Fails because overflows on changing to positive.\r\n    \/\/ unitTest(\"-2147483648\", 10, 2);\r\n  }\r\n\r\n  public static void main(String[] args) {\r\n    if (args.length == 3) {\r\n      String input = args[0];\r\n      int b1 = Integer.parseInt(args[1]);\r\n      int b2 = Integer.parseInt(args[2]);\r\n      System.out.println(convertBase(input, b1, b2));\r\n      unitTest(input, b1, b2);\r\n    } else {\r\n      directedTests();\r\n      Random r = new Random();\r\n      for (int times = 0; times < 100000; ++times) {\r\n        String input = randIntString(r.nextInt(9) + 1);\r\n        int base = r.nextInt(15) + 2;\r\n        System.out.println(\"input is \" + input + \", base1 = 10, base2 = \" + base\r\n                           + \", result = \" + convertBase(input, 10, base));\r\n        unitTest(input, 10, base);\r\n      }\r\n    }\r\n  }\r\n}"
}
