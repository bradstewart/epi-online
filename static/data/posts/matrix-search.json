{
  "slug": "matrix-search",
  "title": "Search in a 2D sorted array",
  "hint": "Can you eliminate a row or a column per comparsion?",
  "problem": "Call a 2D array sorted if its rows and its columns are nondecreasing.\r\nDesign an algorithm that takes a 2D sorted array and a number and checks whether that number appears in the array. Try to archive a linear complexity over m + n, where m is the height and n is the width of the matrix. <p> <img src=\"http:\/\/raw.githubusercontent.com\/bradstewart\/epi-online\/master\/static\/posts\/matrix-search.png\"\/> <p> <i>A 2D sorted array.</i>",
  "skeleton": "public static int squareRoot(int k) {\r\n    \/\/ Your solution here...\r\n}",
  "test": "check(\r\n  Arrays.asList(\r\n    Arrays.asList(1, 2, 3, 4, 5),\r\n    Arrays.asList(2, 3, 4, 5, 6),\r\n    Arrays.asList(10, 20, 30, 40, 50),\r\n    Arrays.asList(15, 21, 30, 40, 5000),\r\n    Arrays.asList(1100, 2000, 3000, 4000, 2147483647)), 50, true);\r\ncheck(\r\n  Arrays.asList(\r\n    Arrays.asList(1, 2, 3, 4, 5),\r\n    Arrays.asList(2, 3, 4, 5, 6),\r\n    Arrays.asList(10, 20, 30, 40, 50),\r\n    Arrays.asList(15, 21, 30, 40, 5000),\r\n    Arrays.asList(1100, 2000, 3000, 4000, 2147483647)), 30, true);\r\ncheck(\r\n  Arrays.asList(\r\n    Arrays.asList(1, 2, 3, 4, 5),\r\n    Arrays.asList(2, 3, 4, 5, 6),\r\n    Arrays.asList(10, 20, 30, 40, 50),\r\n    Arrays.asList(15, 21, 30, 40, 5000),\r\n    Arrays.asList(1100, 2000, 3000, 4000, 2147483647)), 21, true);\r\ncheck(\r\n  Arrays.asList(\r\n    Arrays.asList(1, 2, 3, 4, 5),\r\n    Arrays.asList(2, 3, 4, 5, 6),\r\n    Arrays.asList(10, 20, 30, 40, 50),\r\n    Arrays.asList(15, 21, 30, 40, 5000),\r\n    Arrays.asList(1100, 2000, 3000, 4000, 2147483647)), 13, false);\r\ncheck(\r\n  Arrays.asList(\r\n    Arrays.asList(1, 2, 3, 4, 5),\r\n    Arrays.asList(2, 3, 4, 5, 6),\r\n    Arrays.asList(10, 20, 30, 40, 50),\r\n    Arrays.asList(15, 21, 30, 40, 5000),\r\n    Arrays.asList(1100, 2000, 3000, 4000, 2147483647)), 2500, false);"
}
